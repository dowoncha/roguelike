{"version":3,"sources":["../node_modules/rot-js/lib/rng.js","../node_modules/rot-js/lib/display/backend.js","../node_modules/rot-js/lib/display/canvas.js","../node_modules/rot-js/lib/util.js","../node_modules/rot-js/lib/display/hex.js","../node_modules/rot-js/lib/display/rect.js","../node_modules/rot-js/lib/display/tile.js","../node_modules/rot-js/lib/color.js","../node_modules/rot-js/lib/display/tile-gl.js","../node_modules/process/browser.js","../node_modules/rot-js/lib/display/term.js","../node_modules/rot-js/lib/text.js","../node_modules/rot-js/lib/constants.js","../node_modules/rot-js/lib/display/display.js","../node_modules/rot-js/lib/stringgenerator.js","../node_modules/rot-js/lib/eventqueue.js","../node_modules/rot-js/lib/scheduler/scheduler.js","../node_modules/rot-js/lib/scheduler/simple.js","../node_modules/rot-js/lib/scheduler/speed.js","../node_modules/rot-js/lib/scheduler/action.js","../node_modules/rot-js/lib/scheduler/index.js","../node_modules/rot-js/lib/fov/fov.js","../node_modules/rot-js/lib/fov/discrete-shadowcasting.js","../node_modules/rot-js/lib/fov/precise-shadowcasting.js","../node_modules/rot-js/lib/fov/recursive-shadowcasting.js","../node_modules/rot-js/lib/fov/index.js","../node_modules/rot-js/lib/map/map.js","../node_modules/rot-js/lib/map/arena.js","../node_modules/rot-js/lib/map/dungeon.js","../node_modules/rot-js/lib/map/features.js","../node_modules/rot-js/lib/map/uniform.js","../node_modules/rot-js/lib/map/cellular.js","../node_modules/rot-js/lib/map/digger.js","../node_modules/rot-js/lib/map/ellermaze.js","../node_modules/rot-js/lib/map/dividedmaze.js","../node_modules/rot-js/lib/map/iceymaze.js","../node_modules/rot-js/lib/map/rogue.js","../node_modules/rot-js/lib/map/index.js","../node_modules/rot-js/lib/noise/noise.js","../node_modules/rot-js/lib/noise/simplex.js","../node_modules/rot-js/lib/noise/index.js","../node_modules/rot-js/lib/path/path.js","../node_modules/rot-js/lib/path/dijkstra.js","../node_modules/rot-js/lib/path/astar.js","../node_modules/rot-js/lib/path/index.js","../node_modules/rot-js/lib/engine.js","../node_modules/rot-js/lib/lighting.js","../node_modules/rot-js/lib/index.js","../src/index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["FRAC","RNG","constructor","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","t","getUniformInt","lowerBound","upperBound","max","Math","min","floor","getNormal","mean","stddev","u","v","r","gauss","sqrt","log","getPercentage","getItem","array","length","shuffle","result","clone","slice","index","indexOf","push","splice","getWeightedValue","data","total","id","random","part","getState","setState","state","Date","now","Backend","getContainer","setOptions","options","_options","Canvas","_ctx","document","createElement","getContext","schedule","cb","requestAnimationFrame","canvas","opts","style","fontStyle","font","fontSize","fontFamily","_updateSize","textAlign","textBaseline","clear","fillStyle","bg","fillRect","width","height","eventToPosition","x","y","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","mod","n","clamp","val","capitalize","string","charAt","toUpperCase","substring","format","template","args","map","replacer","match","group1","group2","obj","group","parts","split","name","shift","method","toLowerCase","replaced","apply","first","replace","Hex","_spacingX","_spacingY","_hexSize","draw","clearBefore","ch","fg","px","transpose","reverse","_fill","chars","concat","i","fillText","ceil","computeSize","availWidth","availHeight","computeFontSize","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","spacing","nodeSize","size","cx","cy","a","b","border","ctx","beginPath","moveTo","lineTo","fill","charWidth","xprop","yprop","Rect","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","forceSquareRatio","Tile","_colorCanvas","tileWidth","tileHeight","tileColorize","clearRect","fgs","bgs","tile","tileMap","Error","context","globalCompositeOperation","tileSet","fromString","str","cached","CACHE","matched","values","parseInt","add","color1","colors","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","color","diff","Array","g","h","s","l","d","hue2rgb","p","q","toRGB","clamped","join","toHex","toString","padStart","TileGL","isSupported","preserveDrawingBuffer","_uniforms","_gl","_initWebGL","e","alert","message","complete","addEventListener","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","window","program","createProgram","VS","FS","useProgram","createQuad","UNIFORMS","forEach","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","trim","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","Color","$","process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","arguments","Item","prototype","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","clearToAnsi","termcolor","colorToAnsi","positionToAnsi","SRC_COLORS","DST_COLORS","COLOR_RATIO","rgb","Term","_offset","_cursor","_lastColor","avail","stdout","write","dx","dy","newColor","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","maxWidth","tokens","tokenize","lineWidth","token","type","value","offset","breakLines","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","pop","nextIndex","breakIndex","lastIndexOf","lastTextToken","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","BACKENDS","DEFAULT_OPTIONS","layout","Display","_data","_dirty","Object","assign","DEBUG","bind","_tick","_backend","what","ctor","getOptions","computeTileSize","touches","clientX","clientY","key","drawText","text","lines","Text","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","c","_draw","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","event","subcontext","_observeEvent","getStats","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","_eventTimes","getTime","time","get","getEventTime","undefined","remove","_remove","Scheduler","_queue","_repeat","_current","item","repeat","getTimeOf","next","Simple","Speed","getSpeed","Action","_defaultDuration","_duration","setDuration","FOV","lightPassesCallback","_lightPasses","topology","_getCircle","dirs","countFactor","startOffset","DiscreteShadowcasting","compute","R","callback","DATA","A","B","blocks","neighbors","angle","_visibleCoords","v1","v2","count","PreciseShadowcasting","SHADOWS","A1","A2","visibility","neighborCount","_checkVisibility","index1","edge1","old","index2","edge2","visible","visibleLength","P","P1","P2","arcLength","OCTANTS","RecursiveShadowcasting","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Map","_width","_height","_fillMap","Arena","create","w","empty","Dungeon","_rooms","_corridors","getRooms","getCorridors","Feature","Room","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","addDoor","createRandomAt","roomWidth","roomHeight","createRandomCenter","createRandom","getDoors","clearDoors","addDoors","isWallCallback","right","bottom","debug","console","isValid","canBeDugCallback","digCallback","getCenter","getLeft","getRight","getTop","getBottom","Corridor","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","sx","sy","abs","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","Uniform","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","t2","_generateRooms","_generateCorridors","room","_generateRoom","cnt","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","center1","center2","diffX","diffY","start","end","dirIndex1","dirIndex2","_placeInWall","_digLine","rotation","mid","mid1","mid2","dirIndex","lastBadIndex","isWall","points","corridor","Cellular","born","survive","_dirs","probability","set","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connect","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","Digger","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","prio","sort","featureName","feature","deltas","delta","addToList","L","removeFromList","EllerMaze","rand","DividedMaze","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","IceyMaze","regularity","_regularity","done","_randomize","_isFree","Rogue","connectedCells","cellWidth","cellHeight","hasOwnProperty","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","cgx","cgy","idx","ncgx","ncgy","found","otherRoom","dirToCheck","cw","validRoom","directions","dirIdx","newI","newJ","cwp","chp","roomw","roomh","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","door","_drawCorridor","startPosition","endPosition","xOffset","yOffset","xpos","ypos","tempDist","xDir","yDir","move","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","Noise","F2","G2","Simplex","gradients","_gradients","permutations","_perms","_indexes","xin","yin","perms","indexes","n0","n1","n2","gi","X0","Y0","x0","y0","i1","j1","t0","grad","Path","toX","toY","passableCallback","_toX","_toY","_passableCallback","Dijkstra","_computed","_todo","_add","fromX","fromY","_compute","prev","neighbor","AStar","_done","_fromX","_fromY","_distance","f","itemF","Engine","scheduler","_scheduler","_lock","unlock","lock","actor","act","then","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","setFOV","fov","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","key2","Util","util","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","overlay","createErrorOverlay","body","appendChild","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","some"],"mappings":"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","file":"src.9caef6c7.js","sourceRoot":"../public","sourcesContent":["/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nexport default class Rect extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._canvasCache = {};\n    }\n    setOptions(options) {\n        super.setOptions(options);\n        this._canvasCache = {};\n    }\n    draw(data, clearBefore) {\n        if (Rect.cache) {\n            this._drawWithCache(data);\n        }\n        else {\n            this._drawNoCache(data, clearBefore);\n        }\n    }\n    _drawWithCache(data) {\n        let [x, y, ch, fg, bg] = data;\n        let hash = \"\" + ch + fg + bg;\n        let canvas;\n        if (hash in this._canvasCache) {\n            canvas = this._canvasCache[hash];\n        }\n        else {\n            let b = this._options.border;\n            canvas = document.createElement(\"canvas\");\n            let ctx = canvas.getContext(\"2d\");\n            canvas.width = this._spacingX;\n            canvas.height = this._spacingY;\n            ctx.fillStyle = bg;\n            ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n            if (ch) {\n                ctx.fillStyle = fg;\n                ctx.font = this._ctx.font;\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                let chars = [].concat(ch);\n                for (let i = 0; i < chars.length; i++) {\n                    ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                }\n            }\n            this._canvasCache[hash] = canvas;\n        }\n        this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n    }\n    _drawNoCache(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        if (clearBefore) {\n            let b = this._options.border;\n            this._ctx.fillStyle = bg;\n            this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._spacingX);\n        let height = Math.floor(availHeight / this._spacingY);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        let boxWidth = Math.floor(availWidth / this._options.width);\n        let boxHeight = Math.floor(availHeight / this._options.height);\n        /* compute char ratio */\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        let widthFraction = ratio * boxHeight / boxWidth;\n        if (widthFraction > 1) { /* too wide with current aspect ratio */\n            boxHeight = Math.floor(boxHeight / widthFraction);\n        }\n        return Math.floor(boxHeight / this._options.spacing);\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._spacingX = Math.ceil(opts.spacing * charWidth);\n        this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n        if (opts.forceSquareRatio) {\n            this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n        }\n        this._ctx.canvas.width = opts.width * this._spacingX;\n        this._ctx.canvas.height = opts.height * this._spacingY;\n    }\n}\nRect.cache = false;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n                    \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        // write the provided symbol to the display\n        let chars = [].concat(ch);\n        process.stdout.write(chars[0]);\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nexport default class Display {\n    constructor(options = {}) {\n        this._data = {};\n        this._dirty = false; // false = nothing, true = all, object = dirty cells\n        this._options = {};\n        options = Object.assign({}, DEFAULT_OPTIONS, options);\n        this.setOptions(options);\n        this.DEBUG = this.DEBUG.bind(this);\n        this._tick = this._tick.bind(this);\n        this._backend.schedule(this._tick);\n    }\n    /**\n     * Debug helper, ideal as a map generator callback. Always bound to this.\n     * @param {int} x\n     * @param {int} y\n     * @param {int} what\n     */\n    DEBUG(x, y, what) {\n        let colors = [this._options.bg, this._options.fg];\n        this.draw(x, y, null, null, colors[what % colors.length]);\n    }\n    /**\n     * Clear the whole display (cover it with background color)\n     */\n    clear() {\n        this._data = {};\n        this._dirty = true;\n    }\n    /**\n     * @see ROT.Display\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n            if (options.layout) {\n                let ctor = BACKENDS[options.layout];\n                this._backend = new ctor();\n            }\n            this._backend.setOptions(this._options);\n            this._dirty = true;\n        }\n        return this;\n    }\n    /**\n     * Returns currently set options\n     */\n    getOptions() { return this._options; }\n    /**\n     * Returns the DOM node of this display\n     */\n    getContainer() { return this._backend.getContainer(); }\n    /**\n     * Compute the maximum width/height to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int[2]} cellWidth,cellHeight\n     */\n    computeSize(availWidth, availHeight) {\n        return this._backend.computeSize(availWidth, availHeight);\n    }\n    /**\n     * Compute the maximum font size to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int} fontSize\n     */\n    computeFontSize(availWidth, availHeight) {\n        return this._backend.computeFontSize(availWidth, availHeight);\n    }\n    computeTileSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.width);\n        let height = Math.floor(availHeight / this._options.height);\n        return [width, height];\n    }\n    /**\n     * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n     * @param {Event} e event\n     * @returns {int[2]} -1 for values outside of the canvas\n     */\n    eventToPosition(e) {\n        let x, y;\n        if (\"touches\" in e) {\n            x = e.touches[0].clientX;\n            y = e.touches[0].clientY;\n        }\n        else {\n            x = e.clientX;\n            y = e.clientY;\n        }\n        return this._backend.eventToPosition(x, y);\n    }\n    /**\n     * @param {int} x\n     * @param {int} y\n     * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n     * @param {string} [fg] foreground color\n     * @param {string} [bg] background color\n     */\n    draw(x, y, ch, fg, bg) {\n        if (!fg) {\n            fg = this._options.fg;\n        }\n        if (!bg) {\n            bg = this._options.bg;\n        }\n        let key = `${x},${y}`;\n        this._data[key] = [x, y, ch, fg, bg];\n        if (this._dirty === true) {\n            return;\n        } // will already redraw everything \n        if (!this._dirty) {\n            this._dirty = {};\n        } // first!\n        this._dirty[key] = true;\n    }\n    /**\n     * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n     * @param {int} [maxWidth] wrap at what width?\n     * @returns {int} lines drawn\n     */\n    drawText(x, y, text, maxWidth) {\n        let fg = null;\n        let bg = null;\n        let cx = x;\n        let cy = y;\n        let lines = 1;\n        if (!maxWidth) {\n            maxWidth = this._options.width - x;\n        }\n        let tokens = Text.tokenize(text, maxWidth);\n        while (tokens.length) { // interpret tokenized opcode stream\n            let token = tokens.shift();\n            switch (token.type) {\n                case Text.TYPE_TEXT:\n                    let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                    for (let i = 0; i < token.value.length; i++) {\n                        let cc = token.value.charCodeAt(i);\n                        let c = token.value.charAt(i);\n                        // Assign to `true` when the current char is full-width.\n                        isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                        // Current char is space, whatever full-width or half-width both are OK.\n                        isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                        // The previous char is full-width and\n                        // current char is nether half-width nor a space.\n                        if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                            cx++;\n                        } // add an extra position\n                        // The current char is full-width and\n                        // the previous char is not a space.\n                        if (isFullWidth && !isPrevSpace) {\n                            cx++;\n                        } // add an extra position\n                        this.draw(cx++, cy, c, fg, bg);\n                        isPrevSpace = isSpace;\n                        isPrevFullWidth = isFullWidth;\n                    }\n                    break;\n                case Text.TYPE_FG:\n                    fg = token.value || null;\n                    break;\n                case Text.TYPE_BG:\n                    bg = token.value || null;\n                    break;\n                case Text.TYPE_NEWLINE:\n                    cx = x;\n                    cy++;\n                    lines++;\n                    break;\n            }\n        }\n        return lines;\n    }\n    /**\n     * Timer tick: update dirty parts\n     */\n    _tick() {\n        this._backend.schedule(this._tick);\n        if (!this._dirty) {\n            return;\n        }\n        if (this._dirty === true) { // draw all\n            this._backend.clear();\n            for (let id in this._data) {\n                this._draw(id, false);\n            } // redraw cached data \n        }\n        else { // draw only dirty \n            for (let key in this._dirty) {\n                this._draw(key, true);\n            }\n        }\n        this._dirty = false;\n    }\n    /**\n     * @param {string} key What to draw\n     * @param {bool} clearBefore Is it necessary to clean before?\n     */\n    _draw(key, clearBefore) {\n        let data = this._data[key];\n        if (data[4] != this._options.bg) {\n            clearBefore = true;\n        }\n        this._backend.draw(data, clearBefore);\n    }\n}\nDisplay.Rect = Rect;\nDisplay.Hex = Hex;\nDisplay.Tile = Tile;\nDisplay.TileGL = TileGL;\nDisplay.Term = Term;\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","export default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = [];\n        this._eventTimes = [];\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = [];\n        this._eventTimes = [];\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        let index = this._events.length;\n        for (let i = 0; i < this._eventTimes.length; i++) {\n            if (this._eventTimes[i] > time) {\n                index = i;\n                break;\n            }\n        }\n        this._events.splice(index, 0, event);\n        this._eventTimes.splice(index, 0, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.length) {\n            return null;\n        }\n        let time = this._eventTimes.splice(0, 1)[0];\n        if (time > 0) { /* advance */\n            this._time += time;\n            for (let i = 0; i < this._eventTimes.length; i++) {\n                this._eventTimes[i] -= time;\n            }\n        }\n        return this._events.splice(0, 1)[0];\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return undefined;\n        }\n        return this._eventTimes[index];\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return false;\n        }\n        this._remove(index);\n        return true;\n    }\n    ;\n    /**\n     * Remove an event from the queue\n     * @param {int} index\n     */\n    _remove(index) {\n        this._events.splice(index, 1);\n        this._eventTimes.splice(index, 1);\n    }\n    ;\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","import { Display, Map, RNG, Scheduler, DIRS, Engine } from 'rot-js'\n\ninterface Actor {\n\n}\n\ninterface Command {\n  execute(actor: Actor): void;\n}\n\nclass MoveCommand implements Command {\n  execute(actor: Actor) {\n\n  }\n}\n\nclass InputHandler {\n  private buttonLeft: Command\n  private buttonRight: Command\n  private buttonTop: Command\n  private buttonBottom: Command\n\n  handleInput(input) {\n    // Check if button is pressed\n    if (input === 'D') {\n      return this.buttonRight\n    }\n\n    return null\n  }\n}\n\nclass Player implements Actor {\n  x: number\n  y: number\n\n  private readonly game: Game\n\n  constructor(game: Game, x: number, y: number) {\n    this.game = game\n    this.x = x\n    this.y = y\n  }\n\n  render() {\n    this.game.display.draw(this.x, this.y, \"@\", \"#fff\", \"#000\")\n  }\n\n  act() {\n    this.game.engine.lock()\n    const eventHandler = (event: KeyboardEvent) => {\n      this.handleEvent(event, this.game.map)\n      this.render()\n\n      this.game.renderMap()\n\n      this.game.engine.unlock()\n    }\n\n    window.addEventListener('keydown', eventHandler, { once: true })\n  }\n\n  handleEvent(event: KeyboardEvent, map: Map) {\n    const keyMap = {}\n    keyMap[38] = 0;\n    keyMap[33] = 1;\n    keyMap[39] = 2;\n    keyMap[34] = 3;\n    keyMap[40] = 4;\n    keyMap[35] = 5;\n    keyMap[37] = 6;\n    keyMap[36] = 7;\n\n    const code = event.keyCode\n\n    if (!(code in keyMap)) {\n      return\n    }\n\n    const diff = DIRS[8][keyMap[code]]\n    const newX = this.x + diff[0]\n    const newY = this.y + diff[1]\n\n    const newKey = newX + ',' + newY\n\n    // Cannot move in this direction\n    if (!(newKey in map)) { return }\n\n    this.x = newX\n    this.y = newY\n  }\n}\n\ninterface GameOptions {\n  width: number,\n  height: number\n}\n\ninterface GameContext {\n  readonly display: Display\n  readonly scheduler: any,\n  readonly map: Map\n}\n\ntype Map = { [key: string]: string}\n\nconst TILE_DELIMITER = '/'\n\nexport class Game {\n  options: GameOptions = { width: 40, height: 12 }\n  display: Display\n  scheduler: any\n  map: Map = {}\n  player: Player\n  engine: Engine\n\n  constructor(options?: Partial<GameOptions>) {\n    this.options = { ...this.options, ...options}\n  }\n\n  init() {\n    this.scheduler = new Scheduler.Simple()\n\n    this.engine = new Engine(this.scheduler)\n\n    this.display = new Display({ width: this.options.width, height: this.options.height })\n\n    document.body.appendChild(this.display.getContainer())\n\n    this.generateMap()\n\n    this.generateBoxes()\n\n    this.createPlayer()\n\n    this.display.getContainer().addEventListener('mousemove', (e) => this.onMouseMove(e))\n\n    this.engine.start()\n  }\n\n  onMouseMove(event: MouseEvent) {\n    // Get hovered tile\n    const position = this.display.eventToPosition(event)\n\n    this.highlightTile(position)\n  }\n\n  highlightTile(position: number[]) {\n    const key = `${position[0]},${position[1]}`\n\n    const tile = this.map[key]\n\n    if (tile) {\n      const parts = tile.split(TILE_DELIMITER)\n      const icon = parts[0]\n      const fg = parts[1]\n\n      console.log('highlighting', key, tile)\n\n      this.map[key] = this.createTile(icon, fg, '#0f0')\n    }\n  }\n\n  createTile(icon: string, fg: string, bg: string) {\n    return `${icon}${TILE_DELIMITER}${fg}${TILE_DELIMITER}${bg}`\n  }\n\n  async run() {\n    this.engine.start()\n  }\n\n  createPlayer() {\n    const freeCells = this.getFreeCells()\n\n    const index = Math.floor(RNG.getUniform() * freeCells.length) \n    const key = freeCells.splice(index, 1)[0]\n    const parts = key.split(',')\n    const x = parseInt(parts[0])\n    const y = parseInt(parts[1])\n\n    this.player = new Player(this, x, y)\n\n    this.scheduler.add(this.player, true)\n  }\n\n  renderMap() {\n    for (let key in this.map) {\n      const parts = key.split(',')\n      const x = parseInt(parts[0])\n      const y = parseInt(parts[1])\n\n      const tile = this.map[key]\n      const tileParts = tile.split(TILE_DELIMITER)\n      const icon = tileParts[0]\n      const fg = tileParts[1] || '#fff'\n      const bg = tileParts[2] || '#000'\n\n      this.display.draw(x, y, icon, fg, bg)\n    }\n  }\n\n  private generateMap() {\n    const digger = new Map.Digger(this.options.width, this.options.height)\n\n    digger.create((x, y, value) => {\n      // Do not store walls\n      if (value) {\n        return\n      }\n\n      const key = x + \",\" + y\n      const icon = '.'\n      const fg = '#fff'\n      const bg = '#000'\n      this.map[key] = `${icon}${TILE_DELIMITER}${fg}${TILE_DELIMITER}${bg}`\n    })\n\n    this.renderMap()\n  }\n\n  private getFreeCells() {\n    return Object.entries(this.map).filter(([k,v]) => v[0] === '.').map(([k]) => k)\n  }\n\n  private generateBoxes() {\n    const freeCells = this.getFreeCells()\n\n    for (let i = 0; i < 10; ++i) {\n      const index = Math.floor(RNG.getUniform() * freeCells.length)\n      const key = freeCells.splice(index, 1)[0]\n\n      this.map[key] = '*'\n    }\n  }\n}\n\nexport function main() {\n  const game = new Game({ width: 80, height: 20 })\n\n  game.init()\n\n  // game.run()\n}\n\nwindow.addEventListener('load', main)\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}